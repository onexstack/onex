// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package cacheserver

import (
	any2 "github.com/golang/protobuf/ptypes/any"
	"github.com/onexstack/onex/internal/cacheserver/biz"
	"github.com/onexstack/onex/internal/cacheserver/handler"
	"github.com/onexstack/onex/internal/cacheserver/store"
	"github.com/onexstack/onex/pkg/cache"
	"github.com/onexstack/onexstack/pkg/db"
	"github.com/onexstack/onexstack/pkg/server"
)

// Injectors from wire.go:

func InitializeWebServer(config *Config, mySQLOptions *db.MySQLOptions, cacheCache cache.Cache[*any2.Any], bool2 bool) (server.Server, error) {
	gormDB, err := db.NewMySQL(mySQLOptions)
	if err != nil {
		return nil, err
	}
	datastore := store.NewStore(gormDB, bool2)
	bizBiz := biz.NewBiz(cacheCache, datastore)
	handlerHandler := handler.NewHandler(bizBiz)
	serverConfig := &ServerConfig{
		cfg:     config,
		handler: handlerHandler,
	}
	serverServer, err := NewWebServer(serverConfig)
	if err != nil {
		return nil, err
	}
	return serverServer, nil
}
