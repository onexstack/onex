// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package toyblc

import (
	"github.com/onexstack/onex/internal/toyblc/pkg/blc"
	"github.com/onexstack/onex/internal/toyblc/pkg/ws"
	"github.com/onexstack/onexstack/pkg/server"
)

// Injectors from wire.go:

// InitializeWebServer sets up and initializes the web server with all necessary dependencies.
func InitializeWebServer(config *Config) (server.Server, error) {
	string2 := config.Address
	blockSet := blc.NewBlockSet(string2)
	sockets := ws.NewSockets()
	bool2 := config.Miner
	duration := config.MinMineInterval
	v := config.Accounts
	v2 := config.Peers
	serverConfig := &ServerConfig{
		cfg:             config,
		bs:              blockSet,
		ss:              sockets,
		p2paddr:         string2,
		miner:           bool2,
		minMineInterval: duration,
		accounts:        v,
		peers:           v2,
	}
	serverServer, err := NewAggregatorServer(serverConfig)
	if err != nil {
		return nil, err
	}
	return serverServer, nil
}
