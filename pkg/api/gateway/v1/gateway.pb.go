// Copyright 2022 Lingfei Kong <colin404@foxmail.com>. All rights reserved.
// Use of this source code is governed by a MIT style
// license that can be found in the LICENSE file. The original repo for
// this file is https://github.com/onexstack/onex.
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v5.29.3
// source: gateway/v1/gateway.proto

package v1

import (
	v1beta1 "github.com/onexstack/onex/pkg/apis/apps/v1beta1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IdempotentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IdempotentRequest) Reset() {
	*x = IdempotentRequest{}
	mi := &file_gateway_v1_gateway_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdempotentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdempotentRequest) ProtoMessage() {}

func (x *IdempotentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_v1_gateway_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdempotentRequest.ProtoReflect.Descriptor instead.
func (*IdempotentRequest) Descriptor() ([]byte, []int) {
	return file_gateway_v1_gateway_proto_rawDescGZIP(), []int{0}
}

type IdempotentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IdempotentResponse) Reset() {
	*x = IdempotentResponse{}
	mi := &file_gateway_v1_gateway_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdempotentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdempotentResponse) ProtoMessage() {}

func (x *IdempotentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_v1_gateway_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdempotentResponse.ProtoReflect.Descriptor instead.
func (*IdempotentResponse) Descriptor() ([]byte, []int) {
	return file_gateway_v1_gateway_proto_rawDescGZIP(), []int{1}
}

func (x *IdempotentResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type GetVersionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVersionRequest) Reset() {
	*x = GetVersionRequest{}
	mi := &file_gateway_v1_gateway_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionRequest) ProtoMessage() {}

func (x *GetVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_v1_gateway_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionRequest.ProtoReflect.Descriptor instead.
func (*GetVersionRequest) Descriptor() ([]byte, []int) {
	return file_gateway_v1_gateway_proto_rawDescGZIP(), []int{2}
}

type GetVersionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GitVersion    string                 `protobuf:"bytes,1,opt,name=GitVersion,proto3" json:"GitVersion,omitempty"`
	GitCommit     string                 `protobuf:"bytes,2,opt,name=GitCommit,proto3" json:"GitCommit,omitempty"`
	GitTreeState  string                 `protobuf:"bytes,3,opt,name=GitTreeState,proto3" json:"GitTreeState,omitempty"`
	BuildDate     string                 `protobuf:"bytes,4,opt,name=BuildDate,proto3" json:"BuildDate,omitempty"`
	GoVersion     string                 `protobuf:"bytes,5,opt,name=GoVersion,proto3" json:"GoVersion,omitempty"`
	Compiler      string                 `protobuf:"bytes,6,opt,name=Compiler,proto3" json:"Compiler,omitempty"`
	Platform      string                 `protobuf:"bytes,7,opt,name=Platform,proto3" json:"Platform,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVersionResponse) Reset() {
	*x = GetVersionResponse{}
	mi := &file_gateway_v1_gateway_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionResponse) ProtoMessage() {}

func (x *GetVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_v1_gateway_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionResponse.ProtoReflect.Descriptor instead.
func (*GetVersionResponse) Descriptor() ([]byte, []int) {
	return file_gateway_v1_gateway_proto_rawDescGZIP(), []int{3}
}

func (x *GetVersionResponse) GetGitVersion() string {
	if x != nil {
		return x.GitVersion
	}
	return ""
}

func (x *GetVersionResponse) GetGitCommit() string {
	if x != nil {
		return x.GitCommit
	}
	return ""
}

func (x *GetVersionResponse) GetGitTreeState() string {
	if x != nil {
		return x.GitTreeState
	}
	return ""
}

func (x *GetVersionResponse) GetBuildDate() string {
	if x != nil {
		return x.BuildDate
	}
	return ""
}

func (x *GetVersionResponse) GetGoVersion() string {
	if x != nil {
		return x.GoVersion
	}
	return ""
}

func (x *GetVersionResponse) GetCompiler() string {
	if x != nil {
		return x.Compiler
	}
	return ""
}

func (x *GetVersionResponse) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

var File_gateway_v1_gateway_proto protoreflect.FileDescriptor

var file_gateway_v1_gateway_proto_rawDesc = []byte{
	0x0a, 0x18, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x16, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x6d,
	0x69, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x65, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x13, 0x0a, 0x11, 0x49, 0x64, 0x65, 0x6d, 0x70, 0x6f, 0x74,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2a, 0x0a, 0x12, 0x49, 0x64,
	0x65, 0x6d, 0x70, 0x6f, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xea, 0x01, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x47, 0x69, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x47, 0x69, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x47, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x47, 0x69, 0x74, 0x54, 0x72, 0x65, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x47, 0x69, 0x74, 0x54, 0x72, 0x65, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x6f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x47, 0x6f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x32, 0xf6, 0x0c, 0x0a, 0x07, 0x47, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x12, 0x5d, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x10, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x2f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x6c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6d, 0x70, 0x6f,
	0x74, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x65, 0x6d, 0x70, 0x6f, 0x74, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x65, 0x6d, 0x70, 0x6f, 0x74, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11,
	0x12, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x64, 0x65, 0x6d, 0x70, 0x6f, 0x74, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0xa0, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x6e, 0x65,
	0x72, 0x53, 0x65, 0x74, 0x12, 0x39, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6f, 0x6e, 0x65, 0x78, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x6f, 0x6e, 0x65, 0x78,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x74, 0x1a,
	0x39, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x6e, 0x65,
	0x78, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x6f, 0x6e, 0x65, 0x78, 0x2e, 0x70, 0x6b, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x74, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x12, 0x3a, 0x01, 0x2a, 0x22, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x69, 0x6e, 0x65, 0x72,
	0x73, 0x65, 0x74, 0x73, 0x12, 0xa0, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x69, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x74, 0x12, 0x39, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x6e, 0x65, 0x78, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x6f,
	0x6e, 0x65, 0x78, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70,
	0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x1a, 0x39, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6f, 0x6e, 0x65, 0x78, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x6f, 0x6e, 0x65, 0x78, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x74, 0x22, 0x18, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x12, 0x3a, 0x01, 0x2a, 0x1a, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x69,
	0x6e, 0x65, 0x72, 0x73, 0x65, 0x74, 0x73, 0x12, 0x75, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x74, 0x12, 0x21, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x69, 0x6e,
	0x65, 0x72, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x2a, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x69,
	0x6e, 0x65, 0x72, 0x73, 0x65, 0x74, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0x86,
	0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x74, 0x12, 0x1e,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x69, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x6e, 0x65, 0x78,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x6f, 0x6e, 0x65, 0x78, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x74, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x65, 0x74, 0x73,
	0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0x68, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x69, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x74, 0x12, 0x1f, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x65, 0x74,
	0x73, 0x12, 0x7b, 0x0a, 0x0d, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x12, 0x20, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x63, 0x61, 0x6c, 0x65, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a,
	0x01, 0x2a, 0x1a, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x65, 0x74,
	0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x94,
	0x01, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x36,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x6e, 0x65, 0x78,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x6f, 0x6e, 0x65, 0x78, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x1a, 0x36, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x6e, 0x65, 0x78, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x6f, 0x6e,
	0x65, 0x78, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x73,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x22, 0x15,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x3a, 0x01, 0x2a, 0x22, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x6d,
	0x69, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x94, 0x01, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x36, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6f, 0x6e, 0x65, 0x78, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x6f, 0x6e, 0x65,
	0x78, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x1a, 0x36, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x6e, 0x65, 0x78, 0x73,
	0x74, 0x61, 0x63, 0x6b, 0x2e, 0x6f, 0x6e, 0x65, 0x78, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x4d, 0x69, 0x6e, 0x65, 0x72, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x3a, 0x01, 0x2a,
	0x1a, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x69, 0x0a, 0x0b,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x13, 0x2a, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x73,
	0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0x7a, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4d, 0x69,
	0x6e, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x36, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x6e,
	0x65, 0x78, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x6f, 0x6e, 0x65, 0x78, 0x2e, 0x70, 0x6b, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13,
	0x12, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x6e, 0x61,
	0x6d, 0x65, 0x7d, 0x12, 0x5c, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x6e, 0x65, 0x72,
	0x12, 0x1c, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x69, 0x6e, 0x65, 0x72,
	0x73, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6f, 0x6e, 0x65, 0x78, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2f, 0x6f, 0x6e, 0x65, 0x78, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x76,
	0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gateway_v1_gateway_proto_rawDescOnce sync.Once
	file_gateway_v1_gateway_proto_rawDescData = file_gateway_v1_gateway_proto_rawDesc
)

func file_gateway_v1_gateway_proto_rawDescGZIP() []byte {
	file_gateway_v1_gateway_proto_rawDescOnce.Do(func() {
		file_gateway_v1_gateway_proto_rawDescData = protoimpl.X.CompressGZIP(file_gateway_v1_gateway_proto_rawDescData)
	})
	return file_gateway_v1_gateway_proto_rawDescData
}

var file_gateway_v1_gateway_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_gateway_v1_gateway_proto_goTypes = []any{
	(*IdempotentRequest)(nil),      // 0: gateway.v1.IdempotentRequest
	(*IdempotentResponse)(nil),     // 1: gateway.v1.IdempotentResponse
	(*GetVersionRequest)(nil),      // 2: gateway.v1.GetVersionRequest
	(*GetVersionResponse)(nil),     // 3: gateway.v1.GetVersionResponse
	(*v1beta1.MinerSet)(nil),       // 4: github.com.onexstack.onex.pkg.apis.apps.v1beta1.MinerSet
	(*DeleteMinerSetRequest)(nil),  // 5: gateway.v1.DeleteMinerSetRequest
	(*GetMinerSetRequest)(nil),     // 6: gateway.v1.GetMinerSetRequest
	(*ListMinerSetRequest)(nil),    // 7: gateway.v1.ListMinerSetRequest
	(*ScaleMinerSetRequest)(nil),   // 8: gateway.v1.ScaleMinerSetRequest
	(*v1beta1.Miner)(nil),          // 9: github.com.onexstack.onex.pkg.apis.apps.v1beta1.Miner
	(*DeleteMinerRequest)(nil),     // 10: gateway.v1.DeleteMinerRequest
	(*GetMinerRequest)(nil),        // 11: gateway.v1.GetMinerRequest
	(*ListMinerRequest)(nil),       // 12: gateway.v1.ListMinerRequest
	(*DeleteMinerSetResponse)(nil), // 13: gateway.v1.DeleteMinerSetResponse
	(*ListMinerSetResponse)(nil),   // 14: gateway.v1.ListMinerSetResponse
	(*ScaleMinerSetResponse)(nil),  // 15: gateway.v1.ScaleMinerSetResponse
	(*DeleteMinerResponse)(nil),    // 16: gateway.v1.DeleteMinerResponse
	(*ListMinerResponse)(nil),      // 17: gateway.v1.ListMinerResponse
}
var file_gateway_v1_gateway_proto_depIdxs = []int32{
	2,  // 0: gateway.v1.Gateway.GetVersion:input_type -> gateway.v1.GetVersionRequest
	0,  // 1: gateway.v1.Gateway.GetIdempotentToken:input_type -> gateway.v1.IdempotentRequest
	4,  // 2: gateway.v1.Gateway.CreateMinerSet:input_type -> github.com.onexstack.onex.pkg.apis.apps.v1beta1.MinerSet
	4,  // 3: gateway.v1.Gateway.UpdateMinerSet:input_type -> github.com.onexstack.onex.pkg.apis.apps.v1beta1.MinerSet
	5,  // 4: gateway.v1.Gateway.DeleteMinerSet:input_type -> gateway.v1.DeleteMinerSetRequest
	6,  // 5: gateway.v1.Gateway.GetMinerSet:input_type -> gateway.v1.GetMinerSetRequest
	7,  // 6: gateway.v1.Gateway.ListMinerSet:input_type -> gateway.v1.ListMinerSetRequest
	8,  // 7: gateway.v1.Gateway.ScaleMinerSet:input_type -> gateway.v1.ScaleMinerSetRequest
	9,  // 8: gateway.v1.Gateway.CreateMiner:input_type -> github.com.onexstack.onex.pkg.apis.apps.v1beta1.Miner
	9,  // 9: gateway.v1.Gateway.UpdateMiner:input_type -> github.com.onexstack.onex.pkg.apis.apps.v1beta1.Miner
	10, // 10: gateway.v1.Gateway.DeleteMiner:input_type -> gateway.v1.DeleteMinerRequest
	11, // 11: gateway.v1.Gateway.GetMiner:input_type -> gateway.v1.GetMinerRequest
	12, // 12: gateway.v1.Gateway.ListMiner:input_type -> gateway.v1.ListMinerRequest
	3,  // 13: gateway.v1.Gateway.GetVersion:output_type -> gateway.v1.GetVersionResponse
	1,  // 14: gateway.v1.Gateway.GetIdempotentToken:output_type -> gateway.v1.IdempotentResponse
	4,  // 15: gateway.v1.Gateway.CreateMinerSet:output_type -> github.com.onexstack.onex.pkg.apis.apps.v1beta1.MinerSet
	4,  // 16: gateway.v1.Gateway.UpdateMinerSet:output_type -> github.com.onexstack.onex.pkg.apis.apps.v1beta1.MinerSet
	13, // 17: gateway.v1.Gateway.DeleteMinerSet:output_type -> gateway.v1.DeleteMinerSetResponse
	4,  // 18: gateway.v1.Gateway.GetMinerSet:output_type -> github.com.onexstack.onex.pkg.apis.apps.v1beta1.MinerSet
	14, // 19: gateway.v1.Gateway.ListMinerSet:output_type -> gateway.v1.ListMinerSetResponse
	15, // 20: gateway.v1.Gateway.ScaleMinerSet:output_type -> gateway.v1.ScaleMinerSetResponse
	9,  // 21: gateway.v1.Gateway.CreateMiner:output_type -> github.com.onexstack.onex.pkg.apis.apps.v1beta1.Miner
	9,  // 22: gateway.v1.Gateway.UpdateMiner:output_type -> github.com.onexstack.onex.pkg.apis.apps.v1beta1.Miner
	16, // 23: gateway.v1.Gateway.DeleteMiner:output_type -> gateway.v1.DeleteMinerResponse
	9,  // 24: gateway.v1.Gateway.GetMiner:output_type -> github.com.onexstack.onex.pkg.apis.apps.v1beta1.Miner
	17, // 25: gateway.v1.Gateway.ListMiner:output_type -> gateway.v1.ListMinerResponse
	13, // [13:26] is the sub-list for method output_type
	0,  // [0:13] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_gateway_v1_gateway_proto_init() }
func file_gateway_v1_gateway_proto_init() {
	if File_gateway_v1_gateway_proto != nil {
		return
	}
	file_gateway_v1_miner_proto_init()
	file_gateway_v1_minerset_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gateway_v1_gateway_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gateway_v1_gateway_proto_goTypes,
		DependencyIndexes: file_gateway_v1_gateway_proto_depIdxs,
		MessageInfos:      file_gateway_v1_gateway_proto_msgTypes,
	}.Build()
	File_gateway_v1_gateway_proto = out.File
	file_gateway_v1_gateway_proto_rawDesc = nil
	file_gateway_v1_gateway_proto_goTypes = nil
	file_gateway_v1_gateway_proto_depIdxs = nil
}
