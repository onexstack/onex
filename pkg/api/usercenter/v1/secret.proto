// This file defines the Protobuf messages for managing Secrets.
//
syntax = "proto3"; // Specifies the syntax version used in this file.

package usercenter.v1;

import "google/protobuf/timestamp.proto"; // Importing Google's timestamp type for date/time fields.

// Specifies the Go package for generated code.
option go_package = "github.com/onexstack/onex/pkg/api/usercenter/v1;v1";

// Secret represents a secret with its metadata.
message Secret {
  string userID = 1;
  string name = 2;
  string secretID= 3;
  string secretKey= 4;
  int64 expires = 5;
  int32 status= 6;
  string description = 7;
  google.protobuf.Timestamp createdAt = 8;
  google.protobuf.Timestamp updatedAt = 9;
}

// CreateSecretRequest represents the request message for creating a new secret.
message CreateSecretRequest {
  string name = 1;
  int64 expires = 2;
  string description =3;
}

// CreateSecretResponse represents the response message for a successful secret creation.
message CreateSecretResponse {
    // SecretID is the unique identifier of the newly created secret.
    string secretID = 1;
    // TODO: Add additional fields to return if needed.
}

// UpdateSecretRequest represents the request message for updating an existing secret.
message UpdateSecretRequest {
  // @gotags: uri:"name"
  string name = 1;

  optional int64 expires = 2;
  optional int32 status = 3;
  optional string description = 4;
}

// UpdateSecretResponse represents the response message for a successful secret update.
message UpdateSecretResponse {
}

// DeleteSecretRequest represents the request message for deleting one or more secrets.
message DeleteSecretRequest {
  // @gotags: uri:"name"
  string name = 1;
}

// DeleteSecretResponse represents the response message for a successful secret deletion.
message DeleteSecretResponse {
    // TODO: Add additional fields to return if needed.
}

// GetSecretRequest represents the request message for retrieving a specific secret.
message GetSecretRequest {
    // SecretID is the unique identifier of the secret to retrieve.
    // @gotags: uri:"name"
    string name = 1;
}

// GetSecretResponse represents the response message for a successful retrieval of a secret.
message GetSecretResponse {
    // Secret is the retrieved secret object.
    Secret secret = 1;
}

// ListSecretRequest represents the request message for listing secrets
// with pagination and optional filters.
message ListSecretRequest {
    // Offset is the starting point of the list for pagination.
    // @gotags: form:"offset"
    int64 offset = 1;
    // Limit is the maximum number of secrets to return.
    // @gotags: form:"limit"
    int64 limit = 2;
    // TODO: Add additional query fields if needed.
}

// ListSecretResponse represents the response message for listing secrets.
message ListSecretResponse {
    // TotalCount is the total number of secrets matching the query.
    int64 total = 1;
    // Secret is the list of secrets in the current page.
    repeated Secret secrets = 2;
}
