// Copyright 2022 Lingfei Kong <colin404@foxmail.com>. All rights reserved.
// Use of this source code is governed by a MIT style
// license that can be found in the LICENSE file. The original repo for
// this file is https://github.com/onexstack/onex.

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "k8s.io/api/core/v1"
)

// ResourceHealthApplyConfiguration represents a declarative configuration of the ResourceHealth type for use
// with apply.
type ResourceHealthApplyConfiguration struct {
	ResourceID *v1.ResourceID           `json:"resourceID,omitempty"`
	Health     *v1.ResourceHealthStatus `json:"health,omitempty"`
}

// ResourceHealthApplyConfiguration constructs a declarative configuration of the ResourceHealth type for use with
// apply.
func ResourceHealth() *ResourceHealthApplyConfiguration {
	return &ResourceHealthApplyConfiguration{}
}

// WithResourceID sets the ResourceID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ResourceID field is set to the value of the last call.
func (b *ResourceHealthApplyConfiguration) WithResourceID(value v1.ResourceID) *ResourceHealthApplyConfiguration {
	b.ResourceID = &value
	return b
}

// WithHealth sets the Health field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Health field is set to the value of the last call.
func (b *ResourceHealthApplyConfiguration) WithHealth(value v1.ResourceHealthStatus) *ResourceHealthApplyConfiguration {
	b.Health = &value
	return b
}
