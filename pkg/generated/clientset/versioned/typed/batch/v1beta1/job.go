// Copyright 2022 Lingfei Kong <colin404@foxmail.com>. All rights reserved.
// Use of this source code is governed by a MIT style
// license that can be found in the LICENSE file. The original repo for
// this file is https://github.com/onexstack/onex.

// Code generated by client-gen. DO NOT EDIT.

package v1beta1

import (
	context "context"

	batchv1beta1 "github.com/onexstack/onex/pkg/apis/batch/v1beta1"
	applyconfigurationsbatchv1beta1 "github.com/onexstack/onex/pkg/generated/applyconfigurations/batch/v1beta1"
	scheme "github.com/onexstack/onex/pkg/generated/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// JobsGetter has a method to return a JobInterface.
// A group's client should implement this interface.
type JobsGetter interface {
	Jobs(namespace string) JobInterface
}

// JobInterface has methods to work with Job resources.
type JobInterface interface {
	Create(ctx context.Context, job *batchv1beta1.Job, opts v1.CreateOptions) (*batchv1beta1.Job, error)
	Update(ctx context.Context, job *batchv1beta1.Job, opts v1.UpdateOptions) (*batchv1beta1.Job, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, job *batchv1beta1.Job, opts v1.UpdateOptions) (*batchv1beta1.Job, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*batchv1beta1.Job, error)
	List(ctx context.Context, opts v1.ListOptions) (*batchv1beta1.JobList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *batchv1beta1.Job, err error)
	Apply(ctx context.Context, job *applyconfigurationsbatchv1beta1.JobApplyConfiguration, opts v1.ApplyOptions) (result *batchv1beta1.Job, err error)
	// Add a +genclient:noStatus comment above the type to avoid generating ApplyStatus().
	ApplyStatus(ctx context.Context, job *applyconfigurationsbatchv1beta1.JobApplyConfiguration, opts v1.ApplyOptions) (result *batchv1beta1.Job, err error)
	JobExpansion
}

// jobs implements JobInterface
type jobs struct {
	*gentype.ClientWithListAndApply[*batchv1beta1.Job, *batchv1beta1.JobList, *applyconfigurationsbatchv1beta1.JobApplyConfiguration]
}

// newJobs returns a Jobs
func newJobs(c *BatchV1beta1Client, namespace string) *jobs {
	return &jobs{
		gentype.NewClientWithListAndApply[*batchv1beta1.Job, *batchv1beta1.JobList, *applyconfigurationsbatchv1beta1.JobApplyConfiguration](
			"jobs",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *batchv1beta1.Job { return &batchv1beta1.Job{} },
			func() *batchv1beta1.JobList { return &batchv1beta1.JobList{} },
			gentype.PrefersProtobuf[*batchv1beta1.Job](),
		),
	}
}
