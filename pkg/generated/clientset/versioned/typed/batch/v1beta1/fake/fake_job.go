// Copyright 2022 Lingfei Kong <colin404@foxmail.com>. All rights reserved.
// Use of this source code is governed by a MIT style
// license that can be found in the LICENSE file. The original repo for
// this file is https://github.com/onexstack/onex.

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1beta1 "github.com/onexstack/onex/pkg/apis/batch/v1beta1"
	batchv1beta1 "github.com/onexstack/onex/pkg/generated/applyconfigurations/batch/v1beta1"
	typedbatchv1beta1 "github.com/onexstack/onex/pkg/generated/clientset/versioned/typed/batch/v1beta1"
	gentype "k8s.io/client-go/gentype"
)

// fakeJobs implements JobInterface
type fakeJobs struct {
	*gentype.FakeClientWithListAndApply[*v1beta1.Job, *v1beta1.JobList, *batchv1beta1.JobApplyConfiguration]
	Fake *FakeBatchV1beta1
}

func newFakeJobs(fake *FakeBatchV1beta1, namespace string) typedbatchv1beta1.JobInterface {
	return &fakeJobs{
		gentype.NewFakeClientWithListAndApply[*v1beta1.Job, *v1beta1.JobList, *batchv1beta1.JobApplyConfiguration](
			fake.Fake,
			namespace,
			v1beta1.SchemeGroupVersion.WithResource("jobs"),
			v1beta1.SchemeGroupVersion.WithKind("Job"),
			func() *v1beta1.Job { return &v1beta1.Job{} },
			func() *v1beta1.JobList { return &v1beta1.JobList{} },
			func(dst, src *v1beta1.JobList) { dst.ListMeta = src.ListMeta },
			func(list *v1beta1.JobList) []*v1beta1.Job { return gentype.ToPointerSlice(list.Items) },
			func(list *v1beta1.JobList, items []*v1beta1.Job) { list.Items = gentype.FromPointerSlice(items) },
		),
		fake,
	}
}
