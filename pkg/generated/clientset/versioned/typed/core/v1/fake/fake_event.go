// Copyright 2022 Lingfei Kong <colin404@foxmail.com>. All rights reserved.
// Use of this source code is governed by a MIT style
// license that can be found in the LICENSE file. The original repo for
// this file is https://github.com/onexstack/onex.

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	corev1 "github.com/onexstack/onex/pkg/generated/applyconfigurations/core/v1"
	typedcorev1 "github.com/onexstack/onex/pkg/generated/clientset/versioned/typed/core/v1"
	v1 "k8s.io/api/core/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeEvents implements EventInterface
type fakeEvents struct {
	*gentype.FakeClientWithListAndApply[*v1.Event, *v1.EventList, *corev1.EventApplyConfiguration]
	Fake *FakeCoreV1
}

func newFakeEvents(fake *FakeCoreV1, namespace string) typedcorev1.EventInterface {
	return &fakeEvents{
		gentype.NewFakeClientWithListAndApply[*v1.Event, *v1.EventList, *corev1.EventApplyConfiguration](
			fake.Fake,
			namespace,
			v1.SchemeGroupVersion.WithResource("events"),
			v1.SchemeGroupVersion.WithKind("Event"),
			func() *v1.Event { return &v1.Event{} },
			func() *v1.EventList { return &v1.EventList{} },
			func(dst, src *v1.EventList) { dst.ListMeta = src.ListMeta },
			func(list *v1.EventList) []*v1.Event { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.EventList, items []*v1.Event) { list.Items = gentype.FromPointerSlice(items) },
		),
		fake,
	}
}
