{
  "swagger": "2.0",
  "info": {
    "title": "告诉编译器此文件使用什么版本的语法",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "FakeServer"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/orders": {
      "get": {
        "operationId": "FakeServer_ListOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListOrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "description": "Offset is the starting point of the list for pagination.\n@gotags: form:\"offset\"",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "limit",
            "description": "Limit is the maximum number of orders to return.\n@gotags: form:\"limit\"\n\nTODO: Add additional query fields if needed.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "FakeServer"
        ]
      },
      "delete": {
        "operationId": "FakeServer_DeleteOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteOrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "DeleteOrderRequest represents the request message for deleting one or more orders.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteOrderRequest"
            }
          }
        ],
        "tags": [
          "FakeServer"
        ]
      },
      "post": {
        "summary": "Order-related APIs",
        "operationId": "FakeServer_CreateOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateOrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "CreateOrderRequest represents the request message for creating a new order.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateOrderRequest"
            }
          }
        ],
        "tags": [
          "FakeServer"
        ]
      }
    },
    "/v1/orders/{orderID}": {
      "get": {
        "operationId": "FakeServer_GetOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetOrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orderID",
            "description": "OrderID is the unique identifier of the order to retrieve.\n@gotags: uri:\"orderID\"",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "FakeServer"
        ]
      },
      "put": {
        "operationId": "FakeServer_UpdateOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateOrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orderID",
            "description": "OrderID is the unique identifier of the order to update.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FakeServerUpdateOrderBody"
            }
          }
        ],
        "tags": [
          "FakeServer"
        ]
      }
    }
  },
  "definitions": {
    "FakeServerUpdateOrderBody": {
      "type": "object",
      "properties": {
        "customer": {
          "type": "string"
        },
        "product": {
          "type": "string"
        },
        "quantity": {
          "type": "string",
          "format": "int64"
        }
      },
      "description": "UpdateOrderRequest represents the request message for updating an existing order."
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\nExample 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\nExample 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "v1CreateOrderRequest": {
      "type": "object",
      "properties": {
        "customer": {
          "type": "string"
        },
        "product": {
          "type": "string"
        },
        "quantity": {
          "type": "string",
          "format": "int64"
        }
      },
      "description": "CreateOrderRequest represents the request message for creating a new order."
    },
    "v1CreateOrderResponse": {
      "type": "object",
      "properties": {
        "orderID": {
          "type": "string",
          "description": "OrderID is the unique identifier of the newly created order.\n\nTODO: Add additional fields to return if needed."
        }
      },
      "description": "CreateOrderResponse represents the response message for a successful order creation."
    },
    "v1DeleteOrderRequest": {
      "type": "object",
      "properties": {
        "orderIDs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "OrderIDs is the list of unique identifiers for the orders to delete.\n\nTODO: Add additional fields if needed."
        }
      },
      "description": "DeleteOrderRequest represents the request message for deleting one or more orders."
    },
    "v1DeleteOrderResponse": {
      "type": "object",
      "description": "DeleteOrderResponse represents the response message for a successful order deletion.\n\nTODO: Add additional fields to return if needed."
    },
    "v1GetOrderResponse": {
      "type": "object",
      "properties": {
        "order": {
          "$ref": "#/definitions/v1Order",
          "description": "Order is the retrieved order object."
        }
      },
      "description": "GetOrderResponse represents the response message for a successful retrieval of a order."
    },
    "v1ListOrderResponse": {
      "type": "object",
      "properties": {
        "total": {
          "type": "string",
          "format": "int64",
          "description": "TotalCount is the total number of orders matching the query."
        },
        "orders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Order"
          },
          "description": "Orders is the list of orders in the current page."
        }
      },
      "description": "ListOrderResponse represents the response message for listing orders."
    },
    "v1Order": {
      "type": "object",
      "properties": {
        "orderID": {
          "type": "string",
          "description": "OrderID is the unique identifier for the order."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "CreatedAt is the timestamp when the order was created."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "UpdatedAt is the timestamp when the order was last updated."
        },
        "customer": {
          "type": "string",
          "title": "顾客姓名"
        },
        "product": {
          "type": "string",
          "title": "产品名称"
        },
        "quantity": {
          "type": "string",
          "format": "int64",
          "title": "购买数量"
        }
      },
      "description": "Orders represents a order with its metadata."
    },
    "v1UpdateOrderResponse": {
      "type": "object",
      "description": "UpdateOrderResponse represents the response message for a successful order update.\n\nTODO: Add additional fields to return if needed."
    }
  }
}
